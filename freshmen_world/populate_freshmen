import os


import django
django.setup()
from rango.models import University,Task,Course

def populate():
    
    University = [
        {'name': 'University of Glasgow',
         'location':'Glasgow'},
         {'name':'University of Edinburgh',
          'location':'Edinburgh'}
           ]

    Course = [
        {'name':'CS1S',
         'level': 1,
         'credits':10,
         'courseConvener': 'Dr. Jhon',
         'courseNumber': '123'},
         {'name':'CS1P',
         'level': 1,
         'credits':20,
         'courseConvener': 'Dr. JhonNY',
         'courseNumber': '143'},
        {'name':'OOSE',
         'level': 2,
         'credits':20,
         'courseConvener': 'Dr. Andrew',
         'courseNumber': '234'}]

    Tasks = [
        {'name':'Lab exam 1S',
         'completed': False,
         'dueDate': 14/10/2022,
         'timePlanned': 10
         },
         {'name':'Lab exam 1P',
         'completed': True,
         'dueDate': 10/12/2022,
         'timePlanned': 20
         } ]
    
    for university,university_data in University.items():
        u = add_university(university)
        
    for course,course_data in Course.items():
        u = add_course(course)
        
    for task,task_data in Task.items():
        u = add_task(task)
        
    for u in University.objects.all():
        print(f'{u}')
    
    for c in Course.objects.all():
        print(f'-{c}')
    
    for t in Task.objects.all():
        print(f'-{t}')
    
    
    
    
def add_university(name,location):
    u = University.objects.get_or_create(name = name,location = location)[0]
    u.save()
    return u

def add_course(name,level,credits,courseConvener,courseNumber):
    c = Course.objects.get_or_create(name=name,level=level,credits=credits,
    courseConvener=courseConvener,courseNumber=courseNumber)[0]
    c.save()
    return c

def add_task(name,completed,dueDate,timePlanned):
    t = Task.objects.get_or_create(name=name,completed=completed,dueDate=dueDate,timePlanned=timePlanned)[0]
    t.save()
    return t
    
   
if __name__ == '__main__':
    print('Starting Rango population script...')
    populate()
